"""Update heart rate model to use composite primary key with user_id, date, and source

Revision ID: d86b0a9c02f4
Revises: b35de70f7b02
Create Date: 2025-09-05 19:13:58.525442

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d86b0a9c02f4"
down_revision: Union[str, Sequence[str], None] = "b35de70f7b02"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "hourly_heart_rate", "source", existing_type=sa.TEXT(), nullable=False
    )
    op.drop_index(op.f("ix_hourly_heart_rate_id"), table_name="hourly_heart_rate")
    op.drop_column("hourly_heart_rate", "id")

    # Add composite primary key constraint
    op.create_primary_key(
        "hourly_heart_rate_pkey", "hourly_heart_rate", ["user_id", "date", "source"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop composite primary key constraint
    op.drop_constraint("hourly_heart_rate_pkey", "hourly_heart_rate", type_="primary")

    op.add_column(
        "hourly_heart_rate",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
    )
    op.create_index(
        op.f("ix_hourly_heart_rate_id"), "hourly_heart_rate", ["id"], unique=False
    )
    op.alter_column(
        "hourly_heart_rate", "source", existing_type=sa.TEXT(), nullable=True
    )
    # ### end Alembic commands ###
