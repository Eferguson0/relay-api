"""initial_migration

Revision ID: da331e2a5cae
Revises:
Create Date: 2025-09-06 09:33:02.208561

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "da331e2a5cae"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "diet",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("datetime", sa.DateTime(timezone=True), nullable=False),
        sa.Column("protein", sa.Numeric(), nullable=True),
        sa.Column("carbs", sa.Numeric(), nullable=True),
        sa.Column("fat", sa.Numeric(), nullable=True),
        sa.Column("calories", sa.Numeric(), nullable=True),
        sa.Column("meal_name", sa.String(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_diet_id"), "diet", ["id"], unique=False)
    op.create_table(
        "goal_daily_diet",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("calories", sa.Numeric(), nullable=True),
        sa.Column("protein", sa.Numeric(), nullable=True),
        sa.Column("carbs", sa.Numeric(), nullable=True),
        sa.Column("fat", sa.Numeric(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "goal_message",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("goal_message", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "goal_weight",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("weight", sa.Numeric(), nullable=True),
        sa.Column("body_fat_percentage", sa.Numeric(), nullable=True),
        sa.Column("muscle_mass_percentage", sa.Numeric(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "hourly_heart_rate",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("min_hr", sa.Integer(), nullable=True),
        sa.Column("avg_hr", sa.Numeric(), nullable=True),
        sa.Column("max_hr", sa.Integer(), nullable=True),
        sa.Column("source", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.CheckConstraint(
            "avg_hr IS NULL OR (avg_hr >= 0 AND avg_hr <= 300)",
            name="hourly_heart_rate_avg_hr_check",
        ),
        sa.CheckConstraint(
            "max_hr IS NULL OR (max_hr >= 0 AND max_hr <= 300)",
            name="hourly_heart_rate_max_hr_check",
        ),
        sa.CheckConstraint(
            "min_hr IS NULL OR (min_hr >= 0 AND min_hr <= 300)",
            name="hourly_heart_rate_min_hr_check",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "date", "source"),
    )
    op.create_table(
        "weight",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("weight", sa.Numeric(), nullable=False),
        sa.Column("body_fat_percentage", sa.Numeric(), nullable=True),
        sa.Column("muscle_mass_percentage", sa.Numeric(), nullable=True),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_weight_id"), "weight", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_weight_id"), table_name="weight")
    op.drop_table("weight")
    op.drop_table("hourly_heart_rate")
    op.drop_table("goal_weight")
    op.drop_table("goal_message")
    op.drop_table("goal_daily_diet")
    op.drop_index(op.f("ix_diet_id"), table_name="diet")
    op.drop_table("diet")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
