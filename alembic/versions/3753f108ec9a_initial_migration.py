"""initial_migration

Revision ID: 3753f108ec9a
Revises:
Create Date: 2025-09-13 09:40:29.846752

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3753f108ec9a"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_users",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auth_users_email"), "auth_users", ["email"], unique=True)
    op.create_index(op.f("ix_auth_users_id"), "auth_users", ["id"], unique=False)
    op.create_table(
        "activity_miles",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("date_hour", sa.DateTime(timezone=True), nullable=False),
        sa.Column("miles", sa.Numeric(), nullable=True),
        sa.Column("activity_type", sa.String(), nullable=True),
        sa.Column(
            "source",
            sa.Enum(
                "APPLE_WATCH",
                "FITBIT",
                "GARMIN",
                "SAMSUNG",
                "GOOGLE_FIT",
                "STRAVA",
                "MANUAL",
                "OTHER",
                name="datasource",
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "date_hour", "source"),
    )
    op.create_index(
        op.f("ix_activity_miles_id"), "activity_miles", ["id"], unique=False
    )
    op.create_table(
        "activity_steps",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("date_hour", sa.DateTime(timezone=True), nullable=False),
        sa.Column("steps", sa.Integer(), nullable=True),
        sa.Column(
            "source",
            sa.Enum(
                "APPLE_WATCH",
                "FITBIT",
                "GARMIN",
                "SAMSUNG",
                "GOOGLE_FIT",
                "STRAVA",
                "MANUAL",
                "OTHER",
                name="datasource",
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "date_hour", "source"),
    )
    op.create_index(
        op.f("ix_activity_steps_id"), "activity_steps", ["id"], unique=False
    )
    op.create_table(
        "activity_workouts",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("workout_name", sa.String(), nullable=True),
        sa.Column("workout_type", sa.String(), nullable=False),
        sa.Column(
            "source",
            sa.Enum(
                "APPLE_WATCH",
                "FITBIT",
                "GARMIN",
                "SAMSUNG",
                "GOOGLE_FIT",
                "STRAVA",
                "MANUAL",
                "OTHER",
                name="datasource",
            ),
            nullable=True,
        ),
        sa.Column("duration_minutes", sa.Integer(), nullable=True),
        sa.Column("calories_burned", sa.Numeric(), nullable=True),
        sa.Column("distance_miles", sa.Numeric(), nullable=True),
        sa.Column("avg_heart_rate", sa.Integer(), nullable=True),
        sa.Column("max_heart_rate", sa.Integer(), nullable=True),
        sa.Column("intensity", sa.String(), nullable=True),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "date", "source"),
    )
    op.create_index(
        op.f("ix_activity_workouts_id"), "activity_workouts", ["id"], unique=False
    )
    op.create_table(
        "body_composition",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("date_hour", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "source",
            sa.Enum(
                "APPLE_WATCH",
                "FITBIT",
                "GARMIN",
                "SAMSUNG",
                "GOOGLE_FIT",
                "STRAVA",
                "MANUAL",
                "OTHER",
                name="datasource",
            ),
            nullable=False,
        ),
        sa.Column("weight", sa.Numeric(), nullable=True),
        sa.Column("body_fat_percentage", sa.Numeric(), nullable=True),
        sa.Column("muscle_mass_percentage", sa.Numeric(), nullable=True),
        sa.Column("bone_density", sa.Numeric(), nullable=True),
        sa.Column("water_percentage", sa.Numeric(), nullable=True),
        sa.Column("visceral_fat", sa.Numeric(), nullable=True),
        sa.Column("bmr", sa.Numeric(), nullable=True),
        sa.Column("measurement_method", sa.String(), nullable=True),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "date_hour", "source"),
    )
    op.create_index(
        op.f("ix_body_composition_id"), "body_composition", ["id"], unique=False
    )
    op.create_table(
        "body_heartrate",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("date_hour", sa.DateTime(timezone=True), nullable=False),
        sa.Column("heart_rate", sa.Integer(), nullable=True),
        sa.Column("min_hr", sa.Integer(), nullable=True),
        sa.Column("avg_hr", sa.Numeric(), nullable=True),
        sa.Column("max_hr", sa.Integer(), nullable=True),
        sa.Column("resting_hr", sa.Integer(), nullable=True),
        sa.Column("heart_rate_variability", sa.Numeric(), nullable=True),
        sa.Column(
            "source",
            sa.Enum(
                "APPLE_WATCH",
                "FITBIT",
                "GARMIN",
                "SAMSUNG",
                "GOOGLE_FIT",
                "STRAVA",
                "MANUAL",
                "OTHER",
                name="datasource",
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "date_hour", "source"),
    )
    op.create_index(
        op.f("ix_body_heartrate_id"), "body_heartrate", ["id"], unique=False
    )
    op.create_table(
        "calories_active",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("date_hour", sa.DateTime(timezone=True), nullable=False),
        sa.Column("calories_burned", sa.Numeric(), nullable=True),
        sa.Column(
            "source",
            sa.Enum(
                "APPLE_WATCH",
                "FITBIT",
                "GARMIN",
                "SAMSUNG",
                "GOOGLE_FIT",
                "STRAVA",
                "MANUAL",
                "OTHER",
                name="datasource",
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "date_hour", "source"),
    )
    op.create_index(
        op.f("ix_calories_active_id"), "calories_active", ["id"], unique=False
    )
    op.create_table(
        "calories_baseline",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("date_hour", sa.DateTime(timezone=True), nullable=False),
        sa.Column("baseline_calories", sa.Numeric(), nullable=True),
        sa.Column("bmr", sa.Numeric(), nullable=True),
        sa.Column(
            "source",
            sa.Enum(
                "APPLE_WATCH",
                "FITBIT",
                "GARMIN",
                "SAMSUNG",
                "GOOGLE_FIT",
                "STRAVA",
                "MANUAL",
                "OTHER",
                name="datasource",
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "date_hour", "source"),
    )
    op.create_index(
        op.f("ix_calories_baseline_id"), "calories_baseline", ["id"], unique=False
    )
    op.create_table(
        "goal_general",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("goal_description", sa.Text(), nullable=False),
        sa.Column("target_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("target_weight", sa.Numeric(), nullable=True),
        sa.Column("target_body_fat_percentage", sa.Numeric(), nullable=True),
        sa.Column("target_muscle_mass_percentage", sa.Numeric(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(op.f("ix_goal_general_id"), "goal_general", ["id"], unique=False)
    op.create_table(
        "goal_macros",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("calories", sa.Numeric(), nullable=True),
        sa.Column("protein", sa.Numeric(), nullable=True),
        sa.Column("carbs", sa.Numeric(), nullable=True),
        sa.Column("fat", sa.Numeric(), nullable=True),
        sa.Column("calorie_deficit", sa.Numeric(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(op.f("ix_goal_macros_id"), "goal_macros", ["id"], unique=False)
    op.create_table(
        "nutrition_macros",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("datetime", sa.DateTime(timezone=True), nullable=False),
        sa.Column("protein", sa.Numeric(), nullable=True),
        sa.Column("carbs", sa.Numeric(), nullable=True),
        sa.Column("fat", sa.Numeric(), nullable=True),
        sa.Column("calories", sa.Numeric(), nullable=True),
        sa.Column("meal_name", sa.String(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_nutrition_macros_id"), "nutrition_macros", ["id"], unique=False
    )
    op.create_table(
        "sleep_daily",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("date_day", sa.DateTime(timezone=True), nullable=False),
        sa.Column("bedtime", sa.DateTime(timezone=True), nullable=True),
        sa.Column("wake_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("total_sleep_minutes", sa.Integer(), nullable=True),
        sa.Column("deep_sleep_minutes", sa.Integer(), nullable=True),
        sa.Column("light_sleep_minutes", sa.Integer(), nullable=True),
        sa.Column("rem_sleep_minutes", sa.Integer(), nullable=True),
        sa.Column("awake_minutes", sa.Integer(), nullable=True),
        sa.Column("sleep_efficiency", sa.Numeric(), nullable=True),
        sa.Column("sleep_quality_score", sa.Integer(), nullable=True),
        sa.Column(
            "source",
            sa.Enum(
                "APPLE_WATCH",
                "FITBIT",
                "GARMIN",
                "SAMSUNG",
                "GOOGLE_FIT",
                "STRAVA",
                "MANUAL",
                "OTHER",
                name="datasource",
            ),
            nullable=False,
        ),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "date_day", "source"),
    )
    op.create_index(op.f("ix_sleep_daily_id"), "sleep_daily", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_sleep_daily_id"), table_name="sleep_daily")
    op.drop_table("sleep_daily")
    op.drop_index(op.f("ix_nutrition_macros_id"), table_name="nutrition_macros")
    op.drop_table("nutrition_macros")
    op.drop_index(op.f("ix_goal_macros_id"), table_name="goal_macros")
    op.drop_table("goal_macros")
    op.drop_index(op.f("ix_goal_general_id"), table_name="goal_general")
    op.drop_table("goal_general")
    op.drop_index(op.f("ix_calories_baseline_id"), table_name="calories_baseline")
    op.drop_table("calories_baseline")
    op.drop_index(op.f("ix_calories_active_id"), table_name="calories_active")
    op.drop_table("calories_active")
    op.drop_index(op.f("ix_body_heartrate_id"), table_name="body_heartrate")
    op.drop_table("body_heartrate")
    op.drop_index(op.f("ix_body_composition_id"), table_name="body_composition")
    op.drop_table("body_composition")
    op.drop_index(op.f("ix_activity_workouts_id"), table_name="activity_workouts")
    op.drop_table("activity_workouts")
    op.drop_index(op.f("ix_activity_steps_id"), table_name="activity_steps")
    op.drop_table("activity_steps")
    op.drop_index(op.f("ix_activity_miles_id"), table_name="activity_miles")
    op.drop_table("activity_miles")
    op.drop_index(op.f("ix_auth_users_id"), table_name="auth_users")
    op.drop_index(op.f("ix_auth_users_email"), table_name="auth_users")
    op.drop_table("auth_users")
    # ### end Alembic commands ###
